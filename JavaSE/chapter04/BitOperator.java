
// public class BitOperator {
// 	public static void main(String[] args) {
// 		/*
// 		分析：
// 		2 & 3
// 		2的原码：	00000000 00000000 00000000 00000010
// 		2的补码：	00000000 00000000 00000000 00000010(运算)
// 		3的原码：	00000000 00000000 00000000 00000011
// 		3的补码：	00000000 00000000 00000000 00000011(运算)
// 		2 & 3的补码:	00000000 00000000 00000000 00000010(这是运行结果的补码)
// 		2 & 3 = 2

// 		~ -2
// 		-2的原码： 	10000000 00000000 00000000 00000010
// 		-2的反码：	11111111 11111111 11111111 11111101
// 		-2的补码：	11111111 11111111 11111111 11111110
// 		~ -2的补码：	00000000 00000000 00000000 00000001
// 		~ -2 = 1

// 		2 | 3
// 		2的原码：	00000000 00000000 00000000 00000010
// 		2的补码：	00000000 00000000 00000000 00000010(运算)
// 		3的原码：	00000000 00000000 00000000 00000011
// 		3的补码：	00000000 00000000 00000000 00000011(运算)
// 		2 | 3的补码:	00000000 00000000 00000000 00000011
// 		2 | 3 = 3

// 		2 ^ 3
// 		2的原码：	00000000 00000000 00000000 00000010
// 		2的补码：	00000000 00000000 00000000 00000010(运算)
// 		3的原码：	00000000 00000000 00000000 00000011
// 		3的补码：	00000000 00000000 00000000 00000011(运算)
// 		2 ^ 3的补码:	00000000 00000000 00000000 00000001
// 		2 ^ 3 = 1
// 		*/
// 		System.out.println(2 & 3);//2
// 		System.out.println(~ -2);//1
// 		System.out.println(2 | 3);//3
// 		System.out.println(2 ^ 3);//1

// 	}
// }

public class BitOperator {
	public static void main(String[] args) {
		System.out.println(1 >> 2);//0
		System.out.println(-1 >> 2);//-1
		System.out.println(1 << 2);//4
		System.out.println(-1 << 2);//-4
		System.out.println(3 >>> 2);//0
		System.out.println(-3 >>> 2);//1073741823
		/*
		分析：
		1 >> 2
		1的补码：		00000000 00000000 00000000 00000001
		1 >> 2的补码：	00000000 00000000 00000000 00000000
		1 >> 2 = 0

		-1 >> 2
		-1的原码：		10000000 00000000 00000000 00000001
		-1的补码：		11111111 11111111 11111111 11111111
		-1 >> 2的补码：	11111111 11111111 11111111 11111111
		-1 >> 2的原码：	10000000 00000000 00000000 00000001
		-1 >> 2 = -1

		1 << 2
		1的补码：		00000000 00000000 00000000 00000001
		1 << 2的补码：	00000000 00000000 00000000 00000100
		1 << 2 = 4

		-1 << 2
		-1的原码：		10000000 00000000 00000000 00000001
		-1的补码：		11111111 11111111 11111111 11111111
		-1 << 2的补码：	11111111 11111111 11111111 11111100
		-1 << 2的原码：	10000000 00000000 00000000 00000100
		-1 << 2 = -4

		3 >>> 2
		3的原码：		00000000 00000000 00000000 00000011
		3的补码：		00000000 00000000 00000000 00000011
		3 >>> 2的补码：	00000000 00000000 00000000 00000000
		3 >>> 2 = 0

		-3 >>> 2
		-3的原码：		10000000 00000000 00000000 00000011
		-3的补码：		11111111 11111111 11111111 11111101
		-3 >>> 2的补码：	00111111 11111111 11111111 11111111
		-3 >>> 2的原码：	00111111 11111111 11111111 11111111
		-3 >>> 2 = 1073741823
		*/
	}
}